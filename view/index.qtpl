{% import (
        "wanderinglunch/model"
)%}

{% code
type Root struct {
    BasePage
    Trucks []*model.Truck
    LastUpdate int64
    Zones []string
}
%}

{% func (p *Root) Body() %}
{% if len(p.Trucks) > 0 %}
    <table class="table">
        {% for _, z := range p.Zones %}
            {%code
                var zTrucks []*model.Truck
                for _, t := range p.Trucks {
                    if t.Zone == z {
                        zTrucks = append(zTrucks, t)
                    }
                }
            %}
            {% if len(zTrucks) > 0 %}
                <tr class="noHover"><td colspan="4"><h1>{%s z %}</h1></td></tr>
                <tr class="thead">
                    <th>Truck</th>
                    <th>Location</th>
                    <th class="noMobile">Time</th>
                    <th class="noMobile">Menu</th>
                </tr>
                {% for _, t := range zTrucks %}
                    <tr>
                        <td><a href="/truck/{%s t.Twitname %}"> {%s t.Name %}</a></td>
                        <td class="center">{%s t.Location %}</td>
                        <td class="noMobile center">{%s t.Updated %}</td>
                        <td class="noMobile center">
                            {% if t.Image != "" %}
                                <div class="gallery">
                                    <a href="https://irs0.4sqi.net/img/general/width960{%s t.Image %}">
                                        <img class="menu"
                                            src="https://irs0.4sqi.net/img/general/width30{%s t.Image %}"
                                            alt="{%s t.Name %} menu" />
                                    </a>
                                </div>
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
            {% endif %}
        {% endfor %}
    </table>
{% else %}
    <h1 class="centerText">Your hunger cannot be satisfied, no trucks are tweeting</h1>
    <p class="centerText">If it's late, bookmark the site and come back around lunchtime! <br></p>
    <p class="centerText">There will be a list of trucks here, <a target="_blank" href="https://twitter.com/intent/tweet?text=Wandering Lunch&url=http://wanderinglunch.com{%s p.Site.Name %}">tweet</a> at yourself so you don't forget.<br></p>
    <p class="centerText">Check out <a href="{%s p.Site.Name %}/alltrucks">a list of all the trucks</a> on the site while you wait.</p>
{% endif %}

<input class="checkbox-cb" id="checkbox-cb" type="checkbox" />
<div class="js-notification notification hidden">
  <span class="message">There is new truck information. <a href="#" class="js-refresh">Refresh</a>?</span>
  <label for="checkbox-cb" class="close-cb">x</label>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        setInterval(function() {
            checkForNewInfo('{%s p.Site.Name %}', {%v p.LastUpdate %});
        }, sixtySeconds);
    });
</script>
{% endfunc %}

{% code
type Feedback struct {
    BasePage
}
%}

{% func (p *Feedback) Body() %}
    <h1>Feedback</h1>
    <p>
        Questions about Wandering Lunch? Ideas for new features? I'm prepared to hear
        them all, ask anything you want here.
    </p>
    <div id="disqus_thread"></div>
    <script>
    /**
    * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');

    s.src = '//wanderinglunch.disqus.com/embed.js';

    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>

    <script id="dsq-count-scr" src="//wanderinglunch.disqus.com/count.js" async></script>
{% endfunc %}

{% func (p *Feedback) Title() %} | Feedback{% endfunc %}

{% code
type Map struct {
    BasePage
    Markers []byte
}
%}

{% func (p *Map) Body() %}
    <div id="map" style="height:500px"></div>
    <script>
        var trucks = {%z= p.Markers %}
        var lat = {%v p.Site.Lat %}
        var long = {%v p.Site.Long %}
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAN8Jk0062QBOMPmXH-Totg9zi1GCw3o3w&callback=initMap&v=3.26">
    </script>
{% endfunc %}

{% func (p *Map) Title() %}{%s p.Site.Title %} | Map{% endfunc %}

{% code
type ApiIndex struct {
    BasePage
}
%}

{% func (p *ApiIndex) Body() %}
    <h1>Api documentation</h1>
    <ul>
        <li><a href="/{%s p.Site.Name %}/api/trucks"/>/api/trucks</a> - Like the homepage with a json list of trucks that have been updated and their location.
    </ul>
{% endfunc %}

{% func (p *ApiIndex) Title() %} | About the API{% endfunc %}