@{
    import (
        "regexp"
        "strings"
        "wanderinglunch/view/layout/baseadmin"
        m "wanderinglunch/model"
    )
    var s *m.Site
    var tweets []*m.Tweet
    var locs []*m.Location
    var subs []*m.Sub
}

@section title {
	return " | Queue"
}

@section site {
    return s.Name
}

<h1>Queue</h1>
<table style="border-collapse: collapse;">
    <thead>
        <tr>
            <th>Text</th>
            <th>Locs</th>
           <th></th>
        </tr>
    </thead>
    <tbody>
        @for _, t := range tweets {
            @{
                text := t.Text
                foundLocs := make(map[int]string)

                for _, s := range subs {
                    r, _ := regexp.Compile(s.Regex)
                    text = r.ReplaceAllString(text, s.Replacement)
                }
                text = strings.ToLower(text)
                for _, l := range locs {
                    matched, _ := regexp.MatchString(l.Matcher, strings.ToLower(text))
                    if matched {
                        foundLocs[l.ID] = l.Display
                    }
                }
            }
            <tr style="padding: 5px;border: 1px black solid;">
                <td style="width:70%;padding: 10px;">@text<br><span class="tweetList-time">@t.PrettyDate()<span></td>
                <td>
                    @for k, v := range foundLocs {
                        <span><a href="/admin/location/edit?id=@k">@v</a></span><br>
                    }
                </td>
                <td><a href="/admin/queue/done?id=@t.ID">done</td>
            </tr>
        }
    </tbody>
</table>